- name: Ensure IdM group {{ lustre_group }} exists
  getent:
    database: group
    key: "{{ lustre_group }}"
  register: ngsservice_group

- name: Fail if {{ lustre_group }} group is missing
  fail:
    msg: "Group {{ lustre_group }} not found in IdM â€” check system config."
  when: ngsservice_group.ansible_facts.getent_group is not defined

- name: Ensure {{lustre_root_path}} exists with root:{{ lustre_group }} ownership
  file:
    path: "{{ lustre_root_path }}"
    state: directory
    owner: root
    group: "{{ lustre_group }}"
    mode: '2775'

- name: Ensure {{lustre_mount_path}} exists with {{ ngsraw_username }}:{{ ngsraw_username }} ownership
  file:
    path: "{{ lustre_mount_path }}"
    state: directory
    owner: "{{ ngsraw_username }}"
    group: "{{ discovered_gid }}"
    mode: '2775'

- name: Ensure Cache_<m_id> directories exist under qnap_mount_points
  file:
    path: "{{ lustre_mount_path }}/Cache_{{ m_id }}"
    state: directory
    owner: "{{ ngsraw_username }}"
    group: "{{ discovered_gid }}"
    mode: '2755'
  loop: "{{ machine_map | dict2items | map(attribute='value') | flatten }}"
  loop_control:
    loop_var: m_id
  when:
    - machine_map is defined

- name: Create output directories per m_type and m_id
  vars:
    output_bases:
      - raw_data
      - machine_fastqs
      - run_data
  loop: "{{ machine_map | dict2items }}"
  loop_control:
    loop_var: m_type
  when: machine_map is defined
  block:
    - name: Create dirs for each m_id under {{ m_type.key }}
      loop: "{{ m_type.value }}"
      loop_control:
        loop_var: m_id
      block:
        - name: Create output base dirs for {{ m_type.key }}/{{ m_id }}
          file:
            path: "/lustre/ngsservice/{{ item }}/{{ m_type.key }}/{{ m_id }}"
            state: directory
            owner: "{{ ngsraw_username }}"
            group: "{{ discovered_gid }}"
            mode: '0755'
          loop: "{{ output_bases }}"